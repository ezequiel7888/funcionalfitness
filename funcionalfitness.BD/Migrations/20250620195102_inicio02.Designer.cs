// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using funcionalfitness.BD.datos.entidades;

#nullable disable

namespace funcionalfitness.BD.Migrations
{
    [DbContext(typeof(GymDbContext))]
    [Migration("20250620195102_inicio02")]
    partial class inicio02
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("funcionalfitness.BD.datos.entidades.Categoria", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("edadmaxima")
                        .HasColumnType("int");

                    b.Property<int>("edadminima")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("funcionalfitness.BD.datos.entidades.Clase", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("dia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("hora")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Clases");
                });

            modelBuilder.Entity("funcionalfitness.BD.datos.entidades.Cliente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("categoriaid")
                        .HasColumnType("int");

                    b.Property<string>("codigoingreso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechafinplan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechainicioplan")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tipoentrenamientoid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("categoriaid");

                    b.HasIndex("tipoentrenamientoid");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("funcionalfitness.BD.datos.entidades.ClienteClase", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("claseid")
                        .HasColumnType("int");

                    b.Property<int>("clienteid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("claseid");

                    b.HasIndex("clienteid");

                    b.ToTable("ClientesClases");
                });

            modelBuilder.Entity("funcionalfitness.BD.datos.entidades.Notificacion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("clienteid")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaenvio")
                        .HasColumnType("datetime2");

                    b.Property<bool>("leido")
                        .HasColumnType("bit");

                    b.Property<string>("mensaje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("clienteid");

                    b.ToTable("Notificaciones");
                });

            modelBuilder.Entity("funcionalfitness.BD.datos.entidades.TipoEntrenamiento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("objetivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("TiposEntrenamiento");
                });

            modelBuilder.Entity("funcionalfitness.BD.datos.entidades.ZonaCorporal", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("ZonasCorporales");
                });

            modelBuilder.Entity("funcionalfitness.BD.datos.entidades.Cliente", b =>
                {
                    b.HasOne("funcionalfitness.BD.datos.entidades.Categoria", "categoria")
                        .WithMany("clientes")
                        .HasForeignKey("categoriaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("funcionalfitness.BD.datos.entidades.TipoEntrenamiento", "tipoentrenamiento")
                        .WithMany("clientes")
                        .HasForeignKey("tipoentrenamientoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categoria");

                    b.Navigation("tipoentrenamiento");
                });

            modelBuilder.Entity("funcionalfitness.BD.datos.entidades.ClienteClase", b =>
                {
                    b.HasOne("funcionalfitness.BD.datos.entidades.Clase", "clase")
                        .WithMany("clientesclase")
                        .HasForeignKey("claseid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("funcionalfitness.BD.datos.entidades.Cliente", "cliente")
                        .WithMany("clientesclase")
                        .HasForeignKey("clienteid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("clase");

                    b.Navigation("cliente");
                });

            modelBuilder.Entity("funcionalfitness.BD.datos.entidades.Notificacion", b =>
                {
                    b.HasOne("funcionalfitness.BD.datos.entidades.Cliente", "cliente")
                        .WithMany("notificaciones")
                        .HasForeignKey("clienteid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cliente");
                });

            modelBuilder.Entity("funcionalfitness.BD.datos.entidades.Categoria", b =>
                {
                    b.Navigation("clientes");
                });

            modelBuilder.Entity("funcionalfitness.BD.datos.entidades.Clase", b =>
                {
                    b.Navigation("clientesclase");
                });

            modelBuilder.Entity("funcionalfitness.BD.datos.entidades.Cliente", b =>
                {
                    b.Navigation("clientesclase");

                    b.Navigation("notificaciones");
                });

            modelBuilder.Entity("funcionalfitness.BD.datos.entidades.TipoEntrenamiento", b =>
                {
                    b.Navigation("clientes");
                });
#pragma warning restore 612, 618
        }
    }
}
