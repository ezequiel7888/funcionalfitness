@page "/registro-usuario"

@inject IHttpServicio Http

<h3>Listar Registro Usuario</h3>
<br />
<a class="btn btn-primary" href="/registro-usuario/crear">Crear Nuevo Registro</a>
<br />
<table>
    <tr>
        <th>registrousuarios</th>
    </tr>
    @if (registro == null)
    {
    <p>  buscando .... </p>
    }
    else if(registro.Count == 0)
    { 
        <p> no hay registros cargados</p>
    }
    else
    {
        @foreach (var reg in registro)
        {
            <tr>
                <td>@reg.codigoingreso</td>
                <td>@reg.nombre</td>
                <td>@reg.apellido</td>
                <td>
                    <a class="btn btn-primary" 
                       href="/registro-usuario/editar/{registro.id}">
                        Editar
                    </a>
                </td>
                <td> 
                    <button class="btn btn-danger"
                            @onclick="() => Borrar(reg)"> //verificar que funcione y verificar,
                            el boton aceptar q no esta funcionando, ver si puede cambiar creando
                            los demas crud en el controller de registrousuario o si hay algo mas q no agarra
                            Borrar
                    </button>
                </td>
                
            </tr>
        }
    }
    
</table>
<br />
<p>@mensaje</p>

@code {
    List<RegistroUsuarioDTO>? registro;
    string mensaje = "";

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await LeerRegistros();
    }

    private async Task LeerRegistros()
    {
        // await Task.Delay(2000);
        // registro = new List<RegistroUsuarioDTO>();
        // await Task.Delay(2000);
        // registro.Add(new RegistroUsuarioDTO { codigoingreso = 1, nombre = "Dante", apellido = "Gomez" });
        // await Task.Delay(2000);
        // registro.Add(new RegistroUsuarioDTO { codigoingreso = 1, nombre = "Vandal", apellido = "Abad" });

        //registro = await Http.GetFromJsonAsync<List<RegistroUsuarioDTO>>("api/registrousuario/registro");
        var respuesta = await Http.Get<List<RegistroUsuarioDTO>>("api/registrousuario/registro");
        if (respuesta.Error)
        {
            registro = respuesta.Respuesta;
        }
        else
        {
            mensaje = respuesta.OptenerError();
        }

    }

    private async Task Borrar(RegistroUsuarioDTO reg)
    {
        var respuesta = await Http.Delete($"api/registrousuario/{reg.id}");
        if (respuesta.Error)
        {
            mensaje = respuesta.OptenerError();
        }
        await LeerRegistros();
    }

}
